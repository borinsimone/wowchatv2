rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow other users to read basic profile info
      allow read: if request.auth != null;
    }
    
    // Contacts - users can manage their own contacts
    match /contacts/{contactId} {
      allow read, write: if request.auth != null && 
        (contactId.matches(request.auth.uid + '_.*') || 
         contactId.matches('.*_' + request.auth.uid));
    }
    
    // Chats - users can access chats they participate in
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      
      // Messages within chats
      match /messages/{messageId} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants &&
          request.auth.uid == request.resource.data.senderId;
        allow update: if request.auth != null && 
          request.auth.uid == resource.data.senderId;
        allow delete: if request.auth != null && 
          request.auth.uid == resource.data.senderId;
      }
    }
    
    // Notifications - users can only access their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.recipientId;
      allow create: if request.auth != null;
    }
    
    // Media/Files - users can upload and access files they own
    match /media/{fileId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        request.auth.uid == request.resource.data.uploadedBy;
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.uploadedBy;
    }
    
    // Default: deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}